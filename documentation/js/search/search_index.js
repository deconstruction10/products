var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.291,1,1.822]],["body/controllers/AppController.html",[0,2.061,1,2.908,2,1.654,3,0.527,4,0.453,5,0.453,6,3.116,7,0.872,8,2.299,9,4.428,10,1.654,11,0.041,12,1.206,13,3.795,14,1.844,15,1.503,16,0.656,17,1.206,18,2.504,19,3.116,20,0.527,21,0.026,22,2.668,23,1.654,24,1.844,25,3.795,26,0.032,27,0.032]],["title/modules/AppModule.html",[28,1.291,29,1.822]],["body/modules/AppModule.html",[1,2.909,2,1.836,3,0.44,4,0.378,5,0.378,11,0.041,16,0.764,17,1.007,18,2.622,19,2.602,20,0.44,21,0.022,26,0.029,27,0.029,28,2.062,29,3.514,30,1.54,31,1.54,32,1.949,33,1.949,34,1.54,35,2.909,36,1.949,37,2.602,38,2.602,39,2.602,40,2.938,41,2.938,42,2.59,43,1.949,44,1.949,45,3.17,46,2.961,47,3.17,48,3.17,49,3.17,50,2.228,51,1.54,52,2.961,53,3.17]],["title/injectables/AppService.html",[18,1.44,54,1.291]],["body/injectables/AppService.html",[3,0.552,4,0.474,5,0.474,7,0.913,8,2.365,9,4.501,11,0.04,12,1.263,14,1.932,15,1.547,16,0.552,17,1.263,18,2.365,20,0.552,21,0.027,24,1.932,26,0.033,27,0.033,54,2.121,55,2.444,56,3.263,57,3.975,58,3.975,59,3.975]],["title/classes/BrandRepository.html",[21,0.02,60,1.613]],["body/classes/BrandRepository.html",[3,0.571,4,0.491,5,0.491,11,0.04,16,0.69,20,0.571,21,0.028,26,0.034,27,0.034,60,2.707,61,1.794,62,3.38,63,2.894,64,3.057,65,2.596,66,4.082,67,1.794,68,1.614,69,2.894]],["title/entities/Brands.html",[68,1.161,70,1.613]],["body/entities/Brands.html",[3,0.469,4,0.403,5,0.403,7,0.776,10,2.127,11,0.041,12,1.551,15,1.396,16,0.61,20,0.469,21,0.023,26,0.03,27,0.03,67,1.472,68,1.722,70,1.84,71,2.375,72,2.774,73,2.135,74,3.001,75,1.913,76,2.265,77,1.551,78,4.007,79,3.378,80,1.914,81,4.007,82,3.378,83,3.378,84,4.392,85,3.378,86,4.392,87,3.378,88,3.378]],["title/controllers/BrandsController.html",[0,1.291,89,1.822]],["body/controllers/BrandsController.html",[0,1.123,2,1.123,3,0.358,4,0.307,5,0.307,7,0.592,8,1.775,10,2.013,11,0.041,12,1.468,14,2.244,15,1.72,16,0.641,17,0.819,20,0.358,21,0.018,22,1.811,23,1.123,24,2.37,26,0.025,27,0.025,68,1.01,75,1.985,77,1.349,89,2.246,90,2.115,91,2.115,92,2.84,93,2.246,94,2.246,95,2.246,96,2.577,97,1.584,98,2.999,99,2.577,100,2.61,101,1.85,102,2.61,103,1.584,104,2.999,105,2.577,106,1.584,107,2.897,108,2.999,109,2.577,110,2.999,111,2.999,112,2.115,113,2.115,114,2.115,115,2.063,116,2.115,117,2.063,118,2.115,119,2.568,120,1.584,121,2.577,122,2.115,123,2.577,124,2.577,125,2.115,126,2.577,127,2.115,128,2.577,129,2.115,130,2.577]],["title/modules/BrandsModule.html",[28,1.291,40,1.613]],["body/modules/BrandsModule.html",[2,1.919,3,0.471,4,0.405,5,0.405,11,0.041,16,0.763,17,1.078,20,0.471,21,0.023,26,0.03,27,0.03,28,2.131,30,1.648,31,1.648,32,2.085,33,2.085,34,1.648,35,3.006,36,2.085,40,2.993,42,2.707,43,2.085,44,2.085,46,2.384,50,2.384,51,1.648,60,2.398,65,1.648,68,1.329,69,2.384,89,3.006,115,2.671,116,2.784,131,2.784,132,2.784,133,3.391,134,3.391,135,3.391,136,3.391]],["title/injectables/BrandsService.html",[54,1.291,115,1.44]],["body/injectables/BrandsService.html",[3,0.314,4,0.27,5,0.27,7,0.52,8,1.616,11,0.041,12,1.591,14,2.496,15,1.591,16,0.672,17,0.719,20,0.314,21,0.015,23,0.985,24,2.353,26,0.023,27,0.023,51,1.099,54,1.449,55,1.39,60,1.81,65,2.112,67,0.985,68,1.303,69,1.59,74,2.424,75,1.898,77,1.472,80,2.284,92,2.673,93,2.044,94,2.044,95,2.044,97,2.044,100,2.848,101,2.018,102,2.848,103,2.044,106,2.044,107,2.726,115,1.616,117,1.099,118,1.856,119,2.337,120,1.39,137,1.856,138,3.404,139,4.346,140,3.324,141,2.729,142,2.261,143,2.261,144,2.261,145,2.261,146,2.261,147,2.337,148,3.324,149,2.261,150,1.856,151,2.261,152,2.261,153,1.856,154,2.261,155,1.856,156,1.59,157,3.324,158,3.568,159,2.424,160,1.856,161,1.856]],["title/classes/CreateBrandDto.html",[21,0.02,117,1.44]],["body/classes/CreateBrandDto.html",[3,0.494,4,0.425,5,0.425,7,0.818,10,1.98,11,0.04,12,1.444,15,1.444,16,0.494,20,0.494,21,0.024,23,2.427,26,0.031,27,0.031,61,1.552,73,2.208,75,2.134,77,1.675,80,2.297,101,2.297,117,2.208,162,4.108,163,2.503,164,2.923,165,3.561,166,4.327,167,3.561,168,2.503]],["title/classes/CreateSeriesDto.html",[21,0.02,169,1.613]],["body/classes/CreateSeriesDto.html",[3,0.203,4,0.174,5,0.174,7,0.335,10,2.291,11,0.04,12,1.671,15,1.827,16,0.203,20,0.203,21,0.01,23,2.569,26,0.016,27,0.016,61,0.636,73,1.151,75,1.482,77,1.874,80,2.479,101,2.291,164,4.48,166,4.109,168,1.026,169,1.29,170,4.354,171,1.026,172,2.325,173,3.104,174,2.325,175,2.325,176,2.325,177,2.325,178,2.325,179,2.325,180,3.104,181,2.325,182,2.658,183,2.325,184,2.325,185,2.325,186,2.325,187,1.46,188,1.46,189,1.46,190,1.46,191,1.46,192,1.46,193,1.46,194,1.46,195,1.46,196,1.46,197,1.46,198,1.46,199,1.46,200,1.46,201,1.46,202,1.46,203,1.46]],["title/entities/Series.html",[70,1.613,76,1.161]],["body/entities/Series.html",[3,0.271,4,0.233,5,0.233,7,0.448,10,2.435,11,0.041,12,1.776,15,1.776,16,0.413,20,0.271,21,0.013,26,0.02,27,0.02,67,0.85,68,1.796,70,1.062,71,1.371,73,1.446,75,1.414,76,1.166,77,1.776,78,4.828,80,2.402,81,2.962,101,0.85,159,2.219,172,2.219,173,3.569,174,2.219,175,2.219,176,2.219,177,2.219,178,2.219,179,2.219,180,2.962,181,2.219,183,2.219,184,2.219,185,2.219,186,2.219,204,1.601,205,2.537,206,2.537,207,1.951,208,1.951,209,1.951,210,1.951,211,1.951,212,1.951,213,1.951,214,1.951,215,1.951,216,1.951,217,1.951,218,1.951,219,1.951,220,1.951,221,1.951,222,1.951,223,1.951,224,1.951,225,1.951,226,1.951,227,1.951,228,2.976,229,2.976,230,1.951,231,1.951]],["title/controllers/SeriesController.html",[0,1.291,232,1.822]],["body/controllers/SeriesController.html",[0,0.588,2,0.588,3,0.187,4,0.161,5,0.161,7,0.31,8,1.079,10,2.003,11,0.041,12,1.461,14,2.234,15,1.861,16,0.455,17,0.429,20,0.187,21,0.009,22,0.948,23,0.588,24,2.29,26,0.015,27,0.015,74,2.745,75,1.689,76,0.87,77,1.37,80,2.409,91,1.107,92,2.017,93,1.365,94,1.365,95,1.365,97,0.829,98,2.693,100,2.649,101,1.878,102,2.649,103,0.829,104,1.823,106,0.829,108,1.823,110,1.107,111,1.823,112,1.107,113,1.107,114,1.107,120,0.829,122,1.107,125,1.107,127,1.107,129,1.107,138,3.668,147,3.029,150,1.823,156,0.948,159,1.365,169,1.209,172,2.017,174,2.017,175,2.017,176,2.017,177,2.017,178,2.017,179,2.017,181,2.017,182,2.306,183,2.017,184,2.017,185,2.017,186,2.017,205,2.306,206,3.029,232,1.365,233,1.107,234,2.323,235,1.823,236,2.693,237,1.823,238,1.823,239,2.323,240,1.349,241,1.349,242,1.107,243,2.693,244,2.221,245,1.349,246,2.323,247,1.107,248,2.221,249,2.221,250,1.349,251,1.349,252,1.349,253,2.221,254,1.349,255,1.107,256,1.349,257,1.107,258,2.221,259,1.349,260,1.349,261,2.346,262,1.349,263,1.107,264,1.375,265,1.107,266,0.948,267,0.829,268,1.349,269,1.349,270,1.349,271,1.349,272,1.349,273,1.349,274,1.349,275,1.349,276,1.349,277,1.349,278,1.349,279,1.349,280,1.349,281,1.349,282,1.349,283,1.349,284,1.349,285,1.349,286,1.349,287,1.349,288,1.349,289,1.349,290,1.349,291,1.349,292,1.349,293,1.349,294,1.349,295,1.349,296,1.349,297,1.349,298,1.349,299,1.349,300,1.349,301,1.349,302,1.349]],["title/modules/SeriesModule.html",[28,1.291,41,1.613]],["body/modules/SeriesModule.html",[2,1.951,3,0.483,4,0.415,5,0.415,11,0.041,16,0.75,17,1.106,20,0.483,21,0.024,26,0.03,27,0.03,28,2.157,30,1.691,31,1.691,32,2.14,33,2.14,34,1.691,35,3.044,36,2.14,41,3.014,42,2.753,43,2.14,44,2.14,46,2.447,50,2.447,51,1.691,76,1.364,232,3.044,264,2.69,265,2.857,267,2.14,303,2.857,304,2.857,305,3.48,306,3.48,307,3.48]],["title/classes/SeriesRepository.html",[21,0.02,308,1.822]],["body/classes/SeriesRepository.html",[3,0.571,4,0.491,5,0.491,11,0.04,16,0.69,20,0.571,21,0.028,26,0.034,27,0.034,61,1.794,63,2.894,64,3.057,65,2.596,66,3.38,67,1.794,76,1.614,267,2.531,308,3.057,309,3.38,310,4.117]],["title/injectables/SeriesService.html",[54,1.291,264,1.44]],["body/injectables/SeriesService.html",[3,0.152,4,0.131,5,0.131,7,0.252,8,0.907,11,0.041,12,1.395,14,2.188,15,1.809,16,0.448,17,0.348,20,0.152,21,0.007,23,0.478,24,2.071,26,0.013,27,0.013,51,0.533,54,0.813,55,0.674,65,1.398,67,0.478,74,2.979,75,1.613,76,1.376,77,1.308,80,2.418,92,1.769,93,1.147,94,1.147,95,1.147,97,1.147,100,2.53,101,1.793,102,2.53,103,1.147,106,1.147,120,0.674,138,3.494,141,1.532,147,3.165,153,0.9,155,0.9,156,2.268,158,2.362,159,1.984,160,0.9,161,0.9,172,2.158,174,2.158,175,2.158,176,2.158,177,2.158,178,2.158,179,2.158,181,2.158,182,2.468,183,2.158,184,2.158,185,2.158,186,2.158,205,2.468,206,2.996,234,2,235,2,236,2.362,237,1.532,238,1.532,239,2,242,0.9,243,3.378,246,3.239,247,0.9,255,1.532,257,0.9,261,2.04,263,0.9,264,0.907,266,0.77,267,0.674,308,1.147,311,0.9,312,1.096,313,1.096,314,1.096,315,1.096,316,1.096,317,1.096,318,1.096,319,1.866,320,1.096,321,1.096,322,1.096,323,1.096,324,1.096,325,1.096,326,1.866,327,1.096,328,1.866,329,2.877,330,1.866,331,1.866,332,1.866,333,1.096,334,1.096,335,1.096,336,1.096,337,1.096,338,1.096,339,1.096,340,0.9,341,4.911,342,1.096,343,1.096,344,4.971,345,1.096,346,1.096,347,1.096,348,1.096,349,1.096,350,1.096,351,1.096,352,1.096,353,1.096,354,1.096,355,1.096,356,1.096,357,1.096,358,1.096,359,1.096,360,1.096,361,0.9,362,1.096]],["title/classes/UpdateBrandDto.html",[21,0.02,107,1.613]],["body/classes/UpdateBrandDto.html",[3,0.577,4,0.496,5,0.496,11,0.04,16,0.694,20,0.577,21,0.028,26,0.034,27,0.034,61,1.81,64,2.554,107,2.722,117,2.019,119,2.92,163,2.92,363,3.41,364,3.41,365,2.92,366,2.92,367,3.41,368,4.154]],["title/classes/UpdateSeriesDto.html",[21,0.02,261,1.613]],["body/classes/UpdateSeriesDto.html",[3,0.577,4,0.496,5,0.496,11,0.04,16,0.694,20,0.577,21,0.028,26,0.034,27,0.034,61,1.81,64,2.554,169,2.262,171,2.92,261,2.722,266,2.92,364,3.41,365,2.92,366,2.92,367,3.41,369,3.41,370,4.154]],["title/coverage.html",[371,2.83]],["body/coverage.html",[0,2.003,1,1.841,5,0.357,6,2.459,11,0.04,18,1.455,21,0.036,26,0.028,27,0.028,34,1.455,52,2.105,54,2.003,56,2.459,60,1.631,62,2.459,63,2.85,68,1.174,70,2.208,72,2.459,76,1.174,77,0.952,89,1.841,90,2.459,107,1.631,115,1.455,117,1.455,137,2.459,162,2.459,163,2.85,169,1.631,170,2.459,171,2.85,204,2.459,232,1.841,233,2.459,261,1.631,264,1.455,308,1.841,309,2.459,311,2.459,363,2.459,369,2.459,371,2.105,372,2.995,373,2.995,374,2.995,375,2.459,376,2.995,377,5.874,378,5.52,379,4.055,380,2.995,381,2.995,382,2.995,383,2.459,384,2.995,385,2.995,386,2.995,387,2.995,388,2.995,389,2.995,390,2.995]],["title/dependencies.html",[31,1.729,391,2.039]],["body/dependencies.html",[11,0.041,17,1.197,21,0.032,26,0.032,27,0.032,31,1.829,51,1.829,67,1.641,168,2.646,365,2.646,366,2.646,392,5.134,393,3.764,394,3.764,395,3.764,396,3.764,397,3.764,398,3.764,399,3.764,400,3.764,401,3.764,402,3.764,403,3.764,404,3.09,405,3.764,406,3.764,407,3.764,408,3.764,409,3.764,410,3.764,411,3.764,412,3.764,413,3.764]],["title/miscellaneous/functions.html",[414,1.527,415,2.921]],["body/miscellaneous/functions.html",[7,1.033,11,0.036,26,0.036,27,0.036,34,2.695,383,3.693,414,2.766,415,3.693,416,4.498]],["title/index.html",[7,0.571,417,2.483,418,2.483]],["body/index.html",[4,0.381,11,0.04,26,0.029,27,0.029,65,1.551,371,2.244,419,3.192,420,3.192,421,4.231,422,3.192,423,3.192,424,3.192,425,3.192,426,3.192,427,3.192,428,2.62,429,4.747,430,3.192,431,3.192,432,3.192,433,5.515,434,3.192,435,3.192,436,3.192,437,5.405,438,3.192,439,3.192,440,4.231,441,3.192,442,3.192,443,3.192,444,3.192,445,4.231,446,4.231,447,3.192,448,3.192,449,3.192,450,4.231,451,4.231,452,3.192,453,3.192,454,3.192,455,3.192,456,3.192,457,2.62,458,3.192,459,3.192,460,3.192,461,3.192,462,3.192,463,3.192,464,3.192,465,3.192,466,3.192,467,3.192,468,2.62,469,3.192,470,3.192,471,3.192,472,3.192,473,3.192,474,3.192,475,2.62]],["title/modules.html",[30,1.956]],["body/modules.html",[11,0.035,26,0.035,27,0.035,29,2.662,30,2.104,40,2.357,41,2.357,457,4.481,476,5.458,477,5.458,478,5.458]],["title/overview.html",[479,3.304]],["body/overview.html",[2,1.558,11,0.039,18,2.436,26,0.031,27,0.031,28,1.558,29,3.526,30,1.737,31,1.737,32,2.198,33,2.198,34,1.737,35,2.198,36,2.198,37,2.935,38,2.935,39,2.935,40,2.969,41,2.969,42,2.801,43,2.198,44,2.198,55,2.198,61,1.558,71,2.513,115,2.436,131,2.935,132,2.935,264,2.436,303,2.935,304,2.935,479,2.935,480,5.013,481,3.575,482,3.575]],["title/properties.html",[73,1.729,391,2.039]],["body/properties.html",[11,0.04,26,0.035,27,0.035,73,2.154,428,3.639,468,3.639,475,3.639,483,4.433,484,4.433,485,4.433]],["title/miscellaneous/variables.html",[414,1.527,486,2.921]],["body/miscellaneous/variables.html",[7,0.905,11,0.039,26,0.033,27,0.033,52,3.404,77,1.539,340,3.975,361,3.235,375,3.975,404,3.235,414,2.423,486,3.235,487,3.941,488,3.941,489,3.941,490,3.941,491,3.941,492,3.941,493,3.941,494,3.941,495,3.941,496,3.941,497,3.941,498,3.941,499,3.941,500,3.941,501,3.941,502,3.941,503,3.941,504,3.941,505,3.941,506,3.941]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":484,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["0.3.16",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":481,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":480,"title":{},"body":{"overview.html":{}}}],["3.1.2",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":482,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":158,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["addselect('max(series.price",{"_index":335,"title":{},"body":{"injectables/SeriesService.html":{}}}],["admin",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":458,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":166,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{}}}],["apiproperty({name",{"_index":164,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{}}}],["app",{"_index":435,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":427,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":138,"title":{},"body":{"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["author",{"_index":468,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":156,"title":{},"body":{"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["backers",{"_index":459,"title":{},"body":{"index.html":{}}}],["batterycapacity",{"_index":172,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["between",{"_index":343,"title":{},"body":{"injectables/SeriesService.html":{}}}],["body",{"_index":111,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":159,"title":{},"body":{"injectables/BrandsService.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["brand.dto",{"_index":119,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/UpdateBrandDto.html":{}}}],["brand.dto.ts",{"_index":163,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["brand.dto.ts:5",{"_index":165,"title":{},"body":{"classes/CreateBrandDto.html":{}}}],["brand.dto.ts:8",{"_index":167,"title":{},"body":{"classes/CreateBrandDto.html":{}}}],["brandid",{"_index":173,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{}}}],["brandname",{"_index":74,"title":{},"body":{"entities/Brands.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["brandrepository",{"_index":60,"title":{"classes/BrandRepository.html":{}},"body":{"classes/BrandRepository.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"coverage.html":{}}}],["brands",{"_index":68,"title":{"entities/Brands.html":{}},"body":{"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"entities/Series.html":{},"coverage.html":{}}}],["brands.controller",{"_index":134,"title":{},"body":{"modules/BrandsModule.html":{}}}],["brands.series",{"_index":231,"title":{},"body":{"entities/Series.html":{}}}],["brands.series)@joincolumn({name",{"_index":209,"title":{},"body":{"entities/Series.html":{}}}],["brands.service",{"_index":116,"title":{},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{}}}],["brands/brands.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["brands/entities/brand.entity",{"_index":227,"title":{},"body":{"entities/Series.html":{}}}],["brandscontroller",{"_index":89,"title":{"controllers/BrandsController.html":{}},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"coverage.html":{}}}],["brandsmodule",{"_index":40,"title":{"modules/BrandsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules.html":{},"overview.html":{}}}],["brandsservice",{"_index":115,"title":{"injectables/BrandsService.html":{}},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":344,"title":{},"body":{"injectables/SeriesService.html":{}}}],["browse",{"_index":478,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":476,"title":{},"body":{"modules.html":{}}}],["building",{"_index":422,"title":{},"body":{"index.html":{}}}],["builtinmemory",{"_index":174,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["case",{"_index":341,"title":{},"body":{"injectables/SeriesService.html":{}}}],["class",{"_index":21,"title":{"classes/BrandRepository.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"classes/SeriesRepository.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":61,"title":{},"body":{"classes/BrandRepository.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"classes/SeriesRepository.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_brandsmodule",{"_index":131,"title":{},"body":{"modules/BrandsModule.html":{},"overview.html":{}}}],["cluster_brandsmodule_providers",{"_index":132,"title":{},"body":{"modules/BrandsModule.html":{},"overview.html":{}}}],["cluster_seriesmodule",{"_index":303,"title":{},"body":{"modules/SeriesModule.html":{},"overview.html":{}}}],["cluster_seriesmodule_providers",{"_index":304,"title":{},"body":{"modules/SeriesModule.html":{},"overview.html":{}}}],["column",{"_index":78,"title":{},"body":{"entities/Brands.html":{},"entities/Series.html":{}}}],["const",{"_index":329,"title":{},"body":{"injectables/SeriesService.html":{}}}],["constructor",{"_index":141,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["constructor(brandrepository",{"_index":142,"title":{},"body":{"injectables/BrandsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["constructor(seriesrepository",{"_index":312,"title":{},"body":{"injectables/SeriesService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BrandsController.html":{},"controllers/SeriesController.html":{},"coverage.html":{}}}],["controller('brands",{"_index":121,"title":{},"body":{"controllers/BrandsController.html":{}}}],["controller('series",{"_index":268,"title":{},"body":{"controllers/SeriesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["countryproducer",{"_index":175,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["coverage",{"_index":371,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":367,"title":{},"body":{"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["create(@body",{"_index":122,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["createbranddto",{"_index":117,"title":{"classes/CreateBrandDto.html":{}},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["createquerybuilder('series",{"_index":331,"title":{},"body":{"injectables/SeriesService.html":{}}}],["createseriesdto",{"_index":169,"title":{"classes/CreateSeriesDto.html":{}},"body":{"classes/CreateSeriesDto.html":{},"controllers/SeriesController.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{}}}],["database",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{}}}],["default",{"_index":361,"title":{},"body":{"injectables/SeriesService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["delete",{"_index":114,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["delete(':id",{"_index":104,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":428,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":436,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":118,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{}}}],["dto/update",{"_index":120,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["e2e",{"_index":447,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":423,"title":{},"body":{"index.html":{}}}],["entities",{"_index":71,"title":{},"body":{"entities/Brands.html":{},"entities/Series.html":{},"overview.html":{}}}],["entities/brand.entity",{"_index":69,"title":{},"body":{"classes/BrandRepository.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{}}}],["entities/series.entity",{"_index":267,"title":{},"body":{"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{}}}],["entity",{"_index":70,"title":{"entities/Brands.html":{},"entities/Series.html":{}},"body":{"entities/Brands.html":{},"entities/Series.html":{},"coverage.html":{}}}],["entity('brands",{"_index":88,"title":{},"body":{"entities/Brands.html":{}}}],["entity('phone_series",{"_index":230,"title":{},"body":{"entities/Series.html":{}}}],["entityrepository",{"_index":66,"title":{},"body":{"classes/BrandRepository.html":{},"classes/SeriesRepository.html":{}}}],["entityrepository(series",{"_index":310,"title":{},"body":{"classes/SeriesRepository.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["express",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":64,"title":{},"body":{"classes/BrandRepository.html":{},"classes/SeriesRepository.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["false",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{}}}],["findall",{"_index":92,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["findone",{"_index":93,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["findone(@param('id",{"_index":125,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["findone(id",{"_index":97,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["framework",{"_index":421,"title":{},"body":{"index.html":{}}}],["frontcamera",{"_index":176,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["function",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":415,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:brandname/:seriesid/characteristics",{"_index":258,"title":{},"body":{"controllers/SeriesController.html":{}}}],["get('/filtered",{"_index":244,"title":{},"body":{"controllers/SeriesController.html":{}}}],["get(':id",{"_index":98,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["get('brand",{"_index":253,"title":{},"body":{"controllers/SeriesController.html":{}}}],["get('price",{"_index":248,"title":{},"body":{"controllers/SeriesController.html":{}}}],["getbrandbyid",{"_index":139,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getbrandbyname",{"_index":140,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getbrandbyname(brandname",{"_index":148,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getfilteredseries",{"_index":234,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getfilteredseries(minprice",{"_index":242,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpricerangebybrand",{"_index":235,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getpricerangebybrand(@param('brandname",{"_index":293,"title":{},"body":{"controllers/SeriesController.html":{}}}],["getpricerangebybrand(brandname",{"_index":247,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getrawone",{"_index":336,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getseries",{"_index":236,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getseriesbybrand",{"_index":237,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getseriesbybrand(@query('brand",{"_index":288,"title":{},"body":{"controllers/SeriesController.html":{}}}],["getseriesbybrand(brand",{"_index":252,"title":{},"body":{"controllers/SeriesController.html":{}}}],["getseriesbybrand(brandname",{"_index":319,"title":{},"body":{"injectables/SeriesService.html":{}}}],["getseriesbyid",{"_index":238,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getseriesbyid(@param('id",{"_index":291,"title":{},"body":{"controllers/SeriesController.html":{}}}],["getseriesbyid(id",{"_index":255,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getseriescharacteristics",{"_index":239,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getseriescharacteristics(brandname",{"_index":257,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["getting",{"_index":417,"title":{"index.html":{}},"body":{}}],["grow",{"_index":454,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":465,"title":{},"body":{"index.html":{}}}],["host",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":472,"title":{},"body":{"index.html":{}}}],["id",{"_index":75,"title":{},"body":{"entities/Brands.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["identifier",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BrandsService.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/BrandsService.html":{},"injectables/SeriesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":153,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["injectrepository(brands",{"_index":154,"title":{},"body":{"injectables/BrandsService.html":{}}}],["injectrepository(series",{"_index":325,"title":{},"body":{"injectables/SeriesService.html":{}}}],["installation",{"_index":432,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":434,"title":{},"body":{"index.html":{}}}],["join",{"_index":461,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":228,"title":{},"body":{"entities/Series.html":{}}}],["kamil",{"_index":469,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('series.brand",{"_index":332,"title":{},"body":{"injectables/SeriesService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["license",{"_index":475,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":451,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maincamera",{"_index":177,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["maincamerafeatures",{"_index":178,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["manytoone",{"_index":229,"title":{},"body":{"entities/Series.html":{}}}],["manytoone(undefined",{"_index":208,"title":{},"body":{"entities/Series.html":{}}}],["mariadb",{"_index":404,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxprice",{"_index":243,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["metadata",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["migrations",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minprice",{"_index":246,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["miscellaneous",{"_index":414,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":450,"title":{},"body":{"index.html":{}}}],["mode",{"_index":440,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":464,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":470,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["nest",{"_index":429,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":474,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"injectables/SeriesService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":365,"title":{},"body":{"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":168,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"modules/SeriesModule.html":{},"injectables/SeriesService.html":{},"dependencies.html":{}}}],["new",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":420,"title":{},"body":{"index.html":{}}}],["npm",{"_index":433,"title":{},"body":{"index.html":{}}}],["number",{"_index":80,"title":{},"body":{"entities/Brands.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["onetomany",{"_index":86,"title":{},"body":{"entities/Brands.html":{}}}],["onetomany(undefined",{"_index":83,"title":{},"body":{"entities/Brands.html":{}}}],["open",{"_index":452,"title":{},"body":{"index.html":{}}}],["operatingsystem",{"_index":179,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["optional",{"_index":102,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["ormconfig",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ormconfig.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["overview",{"_index":479,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":391,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":113,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["param('brandname",{"_index":295,"title":{},"body":{"controllers/SeriesController.html":{}}}],["param('seriesid",{"_index":296,"title":{},"body":{"controllers/SeriesController.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["partialtype",{"_index":364,"title":{},"body":{"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{}}}],["partialtype(createbranddto",{"_index":368,"title":{},"body":{"classes/UpdateBrandDto.html":{}}}],["partialtype(createseriesdto",{"_index":370,"title":{},"body":{"classes/UpdateSeriesDto.html":{}}}],["password",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":112,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["patch(':id",{"_index":108,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["please",{"_index":462,"title":{},"body":{"index.html":{}}}],["port",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["price",{"_index":180,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{}}}],["primarycolumn",{"_index":81,"title":{},"body":{"entities/Brands.html":{},"entities/Series.html":{}}}],["private",{"_index":155,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["processorname",{"_index":181,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["production",{"_index":442,"title":{},"body":{"index.html":{}}}],["products",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productstatus",{"_index":205,"title":{},"body":{"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["progressive",{"_index":419,"title":{},"body":{"index.html":{}}}],["project",{"_index":453,"title":{},"body":{"index.html":{}}}],["promise",{"_index":147,"title":{},"body":{"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["properties",{"_index":73,"title":{"properties.html":{}},"body":{"entities/Brands.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["quantity",{"_index":182,"title":{},"body":{"classes/CreateSeriesDto.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["query",{"_index":263,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["query('batterycapacity",{"_index":276,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('brandname",{"_index":271,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('builtinmemory",{"_index":275,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('countryproducer",{"_index":284,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('frontcamera",{"_index":279,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('maincamera",{"_index":277,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('maincamerafeatures",{"_index":278,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('maxprice",{"_index":270,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('minprice",{"_index":269,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('operatingsystem",{"_index":281,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('processorname",{"_index":280,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('productstatus",{"_index":286,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('quantity",{"_index":285,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('ram",{"_index":274,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('screendiagonal",{"_index":273,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('security",{"_index":282,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('seriesname",{"_index":272,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query('simcards",{"_index":283,"title":{},"body":{"controllers/SeriesController.html":{}}}],["query.andwhere('brand.brandname",{"_index":345,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.batterycapacity",{"_index":350,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.builtinmemory",{"_index":349,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.countryproducer",{"_index":358,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.frontcamera",{"_index":353,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.maincamera",{"_index":351,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.maincamerafeatures",{"_index":352,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.operatingsystem",{"_index":355,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.price",{"_index":342,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.processorname",{"_index":354,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.productstatus",{"_index":360,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.quantity",{"_index":359,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.ram",{"_index":348,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.screendiagonal",{"_index":347,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.security",{"_index":356,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.seriesname",{"_index":346,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.andwhere('series.simcards",{"_index":357,"title":{},"body":{"injectables/SeriesService.html":{}}}],["query.getmany",{"_index":362,"title":{},"body":{"injectables/SeriesService.html":{}}}],["ram",{"_index":183,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["range/:brandname",{"_index":249,"title":{},"body":{"controllers/SeriesController.html":{}}}],["read",{"_index":463,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["reflect",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":327,"title":{},"body":{"injectables/SeriesService.html":{}}}],["remove",{"_index":94,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["remove(@param('id",{"_index":129,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["remove(id",{"_index":103,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["removes",{"_index":161,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["repository",{"_index":65,"title":{},"body":{"classes/BrandRepository.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"index.html":{}}}],["repository.ts",{"_index":63,"title":{},"body":{"classes/BrandRepository.html":{},"classes/SeriesRepository.html":{},"coverage.html":{}}}],["repository/brand",{"_index":135,"title":{},"body":{"modules/BrandsModule.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["root",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":437,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":424,"title":{},"body":{"index.html":{}}}],["screendiagonal",{"_index":184,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["security",{"_index":185,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["select('min(series.price",{"_index":334,"title":{},"body":{"injectables/SeriesService.html":{}}}],["series",{"_index":76,"title":{"entities/Series.html":{}},"body":{"entities/Brands.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["series.brand",{"_index":84,"title":{},"body":{"entities/Brands.html":{}}}],["series.controller",{"_index":306,"title":{},"body":{"modules/SeriesModule.html":{}}}],["series.dto",{"_index":266,"title":{},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{},"classes/UpdateSeriesDto.html":{}}}],["series.dto.ts",{"_index":171,"title":{},"body":{"classes/CreateSeriesDto.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{}}}],["series.dto.ts:11",{"_index":188,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:14",{"_index":197,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:17",{"_index":201,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:20",{"_index":200,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:23",{"_index":189,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:26",{"_index":187,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:29",{"_index":193,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:32",{"_index":194,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:35",{"_index":191,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:38",{"_index":198,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:41",{"_index":196,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:44",{"_index":202,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:47",{"_index":203,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:5",{"_index":192,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:50",{"_index":190,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:53",{"_index":199,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.dto.ts:8",{"_index":195,"title":{},"body":{"classes/CreateSeriesDto.html":{}}}],["series.maxprice",{"_index":338,"title":{},"body":{"injectables/SeriesService.html":{}}}],["series.minprice",{"_index":337,"title":{},"body":{"injectables/SeriesService.html":{}}}],["series.service",{"_index":265,"title":{},"body":{"controllers/SeriesController.html":{},"modules/SeriesModule.html":{}}}],["series/entities/series.entity",{"_index":87,"title":{},"body":{"entities/Brands.html":{}}}],["series/series.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["seriescontroller",{"_index":232,"title":{"controllers/SeriesController.html":{}},"body":{"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"coverage.html":{}}}],["seriesmodule",{"_index":41,"title":{"modules/SeriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeriesModule.html":{},"modules.html":{},"overview.html":{}}}],["seriesname",{"_index":206,"title":{},"body":{"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["seriesrepository",{"_index":308,"title":{"classes/SeriesRepository.html":{}},"body":{"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"coverage.html":{}}}],["seriesservice",{"_index":264,"title":{"injectables/SeriesService.html":{}},"body":{"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"injectables/SeriesService.html":{},"coverage.html":{},"overview.html":{}}}],["server",{"_index":425,"title":{},"body":{"index.html":{}}}],["side",{"_index":426,"title":{},"body":{"index.html":{}}}],["simcards",{"_index":186,"title":{},"body":{"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BrandRepository.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"modules/SeriesModule.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"index.html":{}}}],["sponsors",{"_index":456,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/brands/brands.controller.ts",{"_index":90,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{}}}],["src/brands/brands.controller.ts:16",{"_index":96,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:21",{"_index":99,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:31",{"_index":105,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.module.ts",{"_index":133,"title":{},"body":{"modules/BrandsModule.html":{}}}],["src/brands/brands.service.ts",{"_index":137,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/brands/brands.service.ts:14",{"_index":146,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:18",{"_index":149,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:22",{"_index":144,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:26",{"_index":145,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:30",{"_index":152,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:34",{"_index":151,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:9",{"_index":143,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/dto/create",{"_index":162,"title":{},"body":{"classes/CreateBrandDto.html":{},"coverage.html":{}}}],["src/brands/dto/update",{"_index":363,"title":{},"body":{"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["src/brands/entities/brand.entity.ts",{"_index":72,"title":{},"body":{"entities/Brands.html":{},"coverage.html":{}}}],["src/brands/entities/brand.entity.ts:10",{"_index":79,"title":{},"body":{"entities/Brands.html":{}}}],["src/brands/entities/brand.entity.ts:13",{"_index":85,"title":{},"body":{"entities/Brands.html":{}}}],["src/brands/entities/brand.entity.ts:7",{"_index":82,"title":{},"body":{"entities/Brands.html":{}}}],["src/brands/repository/brand",{"_index":62,"title":{},"body":{"classes/BrandRepository.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/**/*.ts",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/series/dto/create",{"_index":170,"title":{},"body":{"classes/CreateSeriesDto.html":{},"coverage.html":{}}}],["src/series/dto/update",{"_index":369,"title":{},"body":{"classes/UpdateSeriesDto.html":{},"coverage.html":{}}}],["src/series/entities/series.entity.ts",{"_index":204,"title":{},"body":{"entities/Series.html":{},"coverage.html":{}}}],["src/series/entities/series.entity.ts:10",{"_index":225,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:13",{"_index":211,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:16",{"_index":219,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:19",{"_index":223,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:22",{"_index":222,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:25",{"_index":212,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:28",{"_index":207,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:31",{"_index":216,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:34",{"_index":217,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:37",{"_index":214,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:40",{"_index":220,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:43",{"_index":218,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:46",{"_index":224,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:49",{"_index":226,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:52",{"_index":213,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:55",{"_index":221,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:59",{"_index":210,"title":{},"body":{"entities/Series.html":{}}}],["src/series/entities/series.entity.ts:7",{"_index":215,"title":{},"body":{"entities/Series.html":{}}}],["src/series/repository/series",{"_index":309,"title":{},"body":{"classes/SeriesRepository.html":{},"coverage.html":{}}}],["src/series/series.controller.ts",{"_index":233,"title":{},"body":{"controllers/SeriesController.html":{},"coverage.html":{}}}],["src/series/series.controller.ts:102",{"_index":241,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:107",{"_index":262,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:112",{"_index":260,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:19",{"_index":245,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:62",{"_index":254,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:67",{"_index":251,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:72",{"_index":256,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:77",{"_index":250,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:82",{"_index":259,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.controller.ts:97",{"_index":240,"title":{},"body":{"controllers/SeriesController.html":{}}}],["src/series/series.module.ts",{"_index":305,"title":{},"body":{"modules/SeriesModule.html":{}}}],["src/series/series.service.ts",{"_index":311,"title":{},"body":{"injectables/SeriesService.html":{},"coverage.html":{}}}],["src/series/series.service.ts:14",{"_index":320,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:156",{"_index":314,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:160",{"_index":315,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:164",{"_index":324,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:168",{"_index":323,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:21",{"_index":318,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:25",{"_index":321,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:29",{"_index":317,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:46",{"_index":322,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:55",{"_index":316,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/series/series.service.ts:8",{"_index":313,"title":{},"body":{"injectables/SeriesService.html":{}}}],["src/subscriber/**/*.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":438,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":441,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":443,"title":{},"body":{"index.html":{}}}],["started",{"_index":418,"title":{"index.html":{}},"body":{}}],["starter",{"_index":431,"title":{},"body":{"index.html":{}}}],["statements",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":466,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Brands.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["subscribers",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":457,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":477,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":339,"title":{},"body":{"injectables/SeriesService.html":{}}}],["synchronize",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":446,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":449,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":448,"title":{},"body":{"index.html":{}}}],["tests",{"_index":445,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":455,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.brandrepository.find",{"_index":157,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandsservice.create(createbranddto",{"_index":123,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.findall",{"_index":124,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.findone(+id",{"_index":126,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.remove(+id",{"_index":130,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.update(+id",{"_index":128,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.seriesrepository",{"_index":330,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seriesrepository.find",{"_index":326,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seriesrepository.findone",{"_index":328,"title":{},"body":{"injectables/SeriesService.html":{}}}],["this.seriesservice.create(createseriesdto",{"_index":298,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.findall",{"_index":299,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.findone(+id",{"_index":300,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getfilteredseries",{"_index":287,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getpricerangebybrand(brandname",{"_index":294,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getseries",{"_index":290,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getseriesbybrand(brand",{"_index":289,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getseriesbyid(id",{"_index":292,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.getseriescharacteristics",{"_index":297,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.remove(+id",{"_index":302,"title":{},"body":{"controllers/SeriesController.html":{}}}],["this.seriesservice.update(+id",{"_index":301,"title":{},"body":{"controllers/SeriesController.html":{}}}],["touch",{"_index":467,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":340,"title":{},"body":{"injectables/SeriesService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":473,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"entities/Brands.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateSeriesDto.html":{},"entities/Series.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":67,"title":{},"body":{"classes/BrandRepository.html":{},"entities/Brands.html":{},"injectables/BrandsService.html":{},"entities/Series.html":{},"classes/SeriesRepository.html":{},"injectables/SeriesService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{}}}],["typeormmodule.forfeature([brands",{"_index":136,"title":{},"body":{"modules/BrandsModule.html":{}}}],["typeormmodule.forfeature([series",{"_index":307,"title":{},"body":{"modules/SeriesModule.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":366,"title":{},"body":{"classes/UpdateBrandDto.html":{},"classes/UpdateSeriesDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":430,"title":{},"body":{"index.html":{}}}],["unit",{"_index":444,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":150,"title":{},"body":{"injectables/BrandsService.html":{},"controllers/SeriesController.html":{}}}],["unlicensed",{"_index":485,"title":{},"body":{"properties.html":{}}}],["update",{"_index":95,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["update(@param('id",{"_index":127,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/SeriesController.html":{}}}],["update(id",{"_index":106,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/SeriesController.html":{},"injectables/SeriesService.html":{}}}],["updatebranddto",{"_index":107,"title":{"classes/UpdateBrandDto.html":{}},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["updates",{"_index":160,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/SeriesService.html":{}}}],["updateseriesdto",{"_index":261,"title":{"classes/UpdateSeriesDto.html":{}},"body":{"controllers/SeriesController.html":{},"injectables/SeriesService.html":{},"classes/UpdateSeriesDto.html":{},"coverage.html":{}}}],["username",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":486,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":483,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":439,"title":{},"body":{"index.html":{}}}],["website",{"_index":471,"title":{},"body":{"index.html":{}}}],["where('brand.brandname",{"_index":333,"title":{},"body":{"injectables/SeriesService.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":460,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/SeriesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBrandsModule\n\nBrandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBrandsModule->AppModule\n\n\n\n\n\nSeriesModule\n\nSeriesModule\n\nAppModule -->\n\nSeriesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BrandsModule\n                        \n                        \n                            SeriesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BrandsModule } from './brands/brands.module';\nimport { SeriesModule } from './series/series.module';\n\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport ormConfig from '../ormconfig';\n@Module({\n  imports: [TypeOrmModule.forRoot(ormConfig), BrandsModule, SeriesModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BrandRepository.html":{"url":"classes/BrandRepository.html","title":"class - BrandRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BrandRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/repository/brand-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Brands } from '../entities/brand.entity';\n\n@EntityRepository()\nexport class BrandRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Brands.html":{"url":"entities/Brands.html","title":"entity - Brands","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Brands\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/entities/brand.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brandName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                series\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brandName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/entities/brand.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/entities/brand.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Series[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, series => series.brand)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/entities/brand.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryColumn } from 'typeorm';\nimport { Series } from '../../series/entities/series.entity';\n\n@Entity('brands')\nexport class Brands {\n  @PrimaryColumn()\n  id: number;\n\n  @Column()\n  brandName: string;\n\n  @OneToMany(() => Series, (series: Series) => series.brand)\n  series: Series[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BrandsController.html":{"url":"controllers/BrandsController.html","title":"controller - BrandsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BrandsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/brands.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                brands\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateBrandDto: UpdateBrandDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBrandDto\n                                    \n                                                UpdateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { BrandsService } from './brands.service';\nimport { CreateBrandDto } from './dto/create-brand.dto';\nimport { UpdateBrandDto } from './dto/update-brand.dto';\n\n@Controller('brands')\nexport class BrandsController {\n  constructor(private readonly brandsService: BrandsService) {}\n\n  // @Post()\n  // create(@Body() createBrandDto: CreateBrandDto) {\n  //   return this.brandsService.create(createBrandDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.brandsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.brandsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBrandDto: UpdateBrandDto) {\n    return this.brandsService.update(+id, updateBrandDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.brandsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BrandsModule.html":{"url":"modules/BrandsModule.html","title":"module - BrandsModule","body":"\n                   \n\n\n\n\n    Modules\n    BrandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BrandsModule\n\n\n\ncluster_BrandsModule_providers\n\n\n\n\nBrandsService\n\nBrandsService\n\n\n\nBrandsModule\n\nBrandsModule\n\nBrandsModule -->\n\nBrandsService->BrandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/brands/brands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BrandsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BrandsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BrandsService } from './brands.service';\nimport { BrandsController } from './brands.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Brands } from './entities/brand.entity';\nimport { BrandRepository } from './repository/brand-repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Brands, BrandRepository])],\n  controllers: [BrandsController],\n  providers: [BrandsService],\n})\nexport class BrandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getBrandById\n                            \n                            \n                                    Async\n                                getBrandByName\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(brandRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/brands/brands.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        brandRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBrandById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrandById()\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBrandByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrandByName(brandName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBrandDto: UpdateBrandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBrandDto\n                                    \n                                                UpdateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBrandDto } from './dto/create-brand.dto';\nimport { UpdateBrandDto } from './dto/update-brand.dto';\nimport { Brands } from './entities/brand.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class BrandsService {\n  constructor(\n    @InjectRepository(Brands)\n    private readonly brandRepository: Repository,\n  ) {}\n  async getBrandById(): Promise {\n    return await this.brandRepository.find();\n  }\n\n  async getBrandByName(brandName: string) {\n    return this.brandRepository.find({ where: { brandName: brandName } });\n  }\n\n  findAll() {\n    return `This action returns all brands`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} brand`;\n  }\n\n  update(id: number, updateBrandDto: UpdateBrandDto) {\n    return `This action updates a #${id} brand`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} brand`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBrandDto.html":{"url":"classes/CreateBrandDto.html","title":"class - CreateBrandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBrandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/dto/create-brand.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'id', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/dto/create-brand.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/dto/create-brand.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateBrandDto {\n  @ApiProperty({ name: 'id', type: 'number' })\n  readonly id: number;\n\n  @ApiProperty()\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSeriesDto.html":{"url":"classes/CreateSeriesDto.html","title":"class - CreateSeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/dto/create-series.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                batteryCapacity\n                            \n                            \n                                    \n                                    Readonly\n                                brandId\n                            \n                            \n                                    \n                                    Readonly\n                                builtInMemory\n                            \n                            \n                                    \n                                    Readonly\n                                countryProducer\n                            \n                            \n                                    \n                                    Readonly\n                                frontCamera\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                mainCamera\n                            \n                            \n                                    \n                                    Readonly\n                                mainCameraFeatures\n                            \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    Readonly\n                                operatingSystem\n                            \n                            \n                                    \n                                    Readonly\n                                price\n                            \n                            \n                                    \n                                    Readonly\n                                processorName\n                            \n                            \n                                    \n                                    Readonly\n                                quantity\n                            \n                            \n                                    \n                                    Readonly\n                                ram\n                            \n                            \n                                    \n                                    Readonly\n                                screenDiagonal\n                            \n                            \n                                    \n                                    Readonly\n                                security\n                            \n                            \n                                    \n                                    Readonly\n                                simCards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        batteryCapacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'batteryCapacity', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'brandId', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        builtInMemory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'builtInMemory', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        countryProducer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'countryProducer', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        frontCamera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'frontCamera', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'id', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        mainCamera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'mainCamera', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        mainCameraFeatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'mainCameraFeatures', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'name', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        operatingSystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'operatingSystem', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'price', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        processorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'processorName', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'quantity', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'ram', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        screenDiagonal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'screenDiagonal', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'security', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        simCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'simCards', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/dto/create-series.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateSeriesDto {\n  @ApiProperty({ name: 'id', type: 'number' })\n  readonly id: number;\n\n  @ApiProperty({ name: 'name', type: 'string' })\n  readonly name: string;\n\n  @ApiProperty({name: 'brandId', type: 'number'})\n  readonly brandId: number;\n\n  @ApiProperty({name: 'price', type: 'number'})\n  readonly price: number;\n\n  @ApiProperty({name: 'screenDiagonal', type: 'number'})\n  readonly screenDiagonal: number;\n\n  @ApiProperty({name: 'ram', type: 'number'})\n  readonly ram: number;\n\n  @ApiProperty({name: 'builtInMemory', type: 'number'})\n  readonly builtInMemory: number;\n\n  @ApiProperty({ name: 'batteryCapacity', type: 'number' })\n  readonly batteryCapacity: number;\n\n  @ApiProperty({ name: 'mainCamera', type: 'string' })\n  readonly mainCamera: string;\n\n  @ApiProperty({ name: 'mainCameraFeatures', type: 'string' })\n  readonly mainCameraFeatures: string;\n\n  @ApiProperty({ name: 'frontCamera', type: 'string' })\n  readonly frontCamera: string;\n\n  @ApiProperty({ name: 'processorName', type: 'string' })\n  readonly processorName: string;\n\n  @ApiProperty({ name: 'operatingSystem', type: 'string' })\n  readonly operatingSystem: string;\n\n  @ApiProperty({ name: 'security', type: 'string' })\n  readonly security: string;\n\n  @ApiProperty({ name: 'simCards', type: 'string' })\n  readonly simCards: number;\n\n  @ApiProperty({ name: 'countryProducer', type: 'string' })\n  readonly countryProducer: string;\n\n  @ApiProperty({ name: 'quantity', type: 'string' })\n  readonly quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Series.html":{"url":"entities/Series.html","title":"entity - Series","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Series\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/entities/series.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                batteryCapacity\n                            \n                            \n                                    \n                                    \n                                brand\n                            \n                            \n                                    \n                                brandId\n                            \n                            \n                                    \n                                builtInMemory\n                            \n                            \n                                    \n                                countryProducer\n                            \n                            \n                                    \n                                frontCamera\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                mainCamera\n                            \n                            \n                                    \n                                mainCameraFeatures\n                            \n                            \n                                    \n                                operatingSystem\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                processorName\n                            \n                            \n                                    \n                                productStatus\n                            \n                            \n                                    \n                                ram\n                            \n                            \n                                    \n                                screenDiagonal\n                            \n                            \n                                    \n                                security\n                            \n                            \n                                    \n                                seriesName\n                            \n                            \n                                    \n                                simCards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        batteryCapacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Brands\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, brands => brands.series)@JoinColumn({name: 'brandId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        builtInMemory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        countryProducer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        frontCamera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mainCamera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mainCameraFeatures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        operatingSystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        processorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        screenDiagonal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        seriesName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        simCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/series/entities/series.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Brands } from '../../brands/entities/brand.entity';\nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryColumn } from 'typeorm';\n\n@Entity('phone_series')\nexport class Series {\n  @PrimaryColumn()\n  id: number;\n\n  @Column()\n  seriesName: string;\n\n  @Column()\n  brandId: number;\n\n  @Column()\n  price: number;\n\n  @Column()\n  screenDiagonal: number;\n\n  @Column()\n  ram: number;\n\n  @Column()\n  builtInMemory: number;\n\n  @Column()\n  batteryCapacity: number;\n\n  @Column()\n  mainCamera: string;\n\n  @Column()\n  mainCameraFeatures: string;\n\n  @Column()\n  frontCamera: string;\n\n  @Column()\n  processorName: string;\n\n  @Column()\n  operatingSystem: string;\n\n  @Column()\n  security: string;\n\n  @Column()\n  simCards: number;\n\n  @Column()\n  countryProducer: string;\n\n  @Column()\n  productStatus: string;\n\n  @ManyToOne(() => Brands, (brands) => brands.series)\n  @JoinColumn({ name: 'brandId' })\n  brand: Brands;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SeriesController.html":{"url":"controllers/SeriesController.html","title":"controller - SeriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SeriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/series.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                series\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getFilteredSeries\n                            \n                            \n                                    \n                                    Async\n                                getPriceRangeByBrand\n                            \n                            \n                                    \n                                    Async\n                                getSeries\n                            \n                            \n                                    \n                                    Async\n                                getSeriesByBrand\n                            \n                            \n                                    \n                                    Async\n                                getSeriesById\n                            \n                            \n                                    \n                                    Async\n                                getSeriesCharacteristics\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getFilteredSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredSeries(minPrice: number, maxPrice: number, brandName: string, seriesName: string, screenDiagonal: number, ram: number, builtInMemory: number, batteryCapacity: number, mainCamera: string, mainCameraFeatures: string, frontCamera: string, processorName: string, operatingSystem: string, security: string, simCards: number, countryProducer: string, quantity: number, productStatus: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/filtered')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    minPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seriesName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    screenDiagonal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ram\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    builtInMemory\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batteryCapacity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mainCamera\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mainCameraFeatures\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    frontCamera\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    processorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operatingSystem\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    simCards\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    countryProducer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getPriceRangeByBrand\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPriceRangeByBrand(brandName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('price-range/:brandName')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeries()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getSeriesByBrand\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesByBrand(brand: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('brand')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brand\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getSeriesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getSeriesCharacteristics\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesCharacteristics(brandName: string, seriesName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:brandName/:seriesId/characteristics')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seriesName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSeriesDto: UpdateSeriesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/series/series.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSeriesDto\n                                    \n                                                UpdateSeriesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Query,\n} from '@nestjs/common';\nimport { SeriesService } from './series.service';\nimport { UpdateSeriesDto } from './dto/update-series.dto';\nimport { Series } from './entities/series.entity';\n\n@Controller('series')\nexport class SeriesController {\n  constructor(private readonly seriesService: SeriesService) {}\n\n  @Get('/filtered')\n  async getFilteredSeries(\n    @Query('minPrice') minPrice: number,\n    @Query('maxPrice') maxPrice: number,\n    @Query('brandName') brandName: string,\n    @Query('seriesName') seriesName: string,\n    @Query('screenDiagonal') screenDiagonal: number,\n    @Query('ram') ram: number,\n    @Query('builtInMemory') builtInMemory: number,\n    @Query('batteryCapacity') batteryCapacity: number,\n    @Query('mainCamera') mainCamera: string,\n    @Query('mainCameraFeatures') mainCameraFeatures: string,\n    @Query('frontCamera') frontCamera: string,\n    @Query('processorName') processorName: string,\n    @Query('operatingSystem') operatingSystem: string,\n    @Query('security') security: string,\n    @Query('simCards') simCards: number,\n    @Query('countryProducer') countryProducer: string,\n    @Query('quantity') quantity: number,\n    @Query('productStatus') productStatus: string,\n  ): Promise {\n    return this.seriesService.getFilteredSeries(\n      minPrice,\n      maxPrice,\n      brandName,\n      seriesName,\n      screenDiagonal,\n      ram,\n      builtInMemory,\n      batteryCapacity,\n      mainCamera,\n      mainCameraFeatures,\n      frontCamera,\n      processorName,\n      operatingSystem,\n      security,\n      simCards,\n      countryProducer,\n      quantity,\n      productStatus,\n    );\n  }\n\n  @Get('brand')\n  async getSeriesByBrand(@Query('brand') brand: string): Promise {\n    return this.seriesService.getSeriesByBrand(brand);\n  }\n\n  @Get()\n  async getSeries(): Promise {\n    return this.seriesService.getSeries();\n  }\n\n  @Get(':id')\n  async getSeriesById(@Param('id') id: number): Promise {\n    return this.seriesService.getSeriesById(id);\n  }\n\n  @Get('price-range/:brandName')\n  async getPriceRangeByBrand(@Param('brandName') brandName: string) {\n    return this.seriesService.getPriceRangeByBrand(brandName);\n  }\n\n  @Get('/:brandName/:seriesId/characteristics')\n  async getSeriesCharacteristics(\n    @Param('brandName') brandName: string,\n    @Param('seriesId') seriesName: string,\n  ) {\n    return await this.seriesService.getSeriesCharacteristics(\n      brandName,\n      seriesName,\n    );\n  }\n  // @Post()\n  // create(@Body() createSeriesDto: CreateSeriesDto) {\n  //   return this.seriesService.create(createSeriesDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.seriesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.seriesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSeriesDto: UpdateSeriesDto) {\n    return this.seriesService.update(+id, updateSeriesDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.seriesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeriesModule.html":{"url":"modules/SeriesModule.html","title":"module - SeriesModule","body":"\n                   \n\n\n\n\n    Modules\n    SeriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeriesModule\n\n\n\ncluster_SeriesModule_providers\n\n\n\n\nSeriesService\n\nSeriesService\n\n\n\nSeriesModule\n\nSeriesModule\n\nSeriesModule -->\n\nSeriesService->SeriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/series/series.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SeriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeriesService } from './series.service';\nimport { SeriesController } from './series.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Series } from './entities/series.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Series])],\n  controllers: [SeriesController],\n  providers: [SeriesService],\n})\nexport class SeriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeriesRepository.html":{"url":"classes/SeriesRepository.html","title":"class - SeriesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeriesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/repository/series-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Series } from '../entities/series.entity';\n\n@EntityRepository(Series)\nexport class SeriesRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesService.html":{"url":"injectables/SeriesService.html","title":"injectable - SeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/series.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getFilteredSeries\n                            \n                            \n                                    Async\n                                getPriceRangeByBrand\n                            \n                            \n                                    Async\n                                getSeries\n                            \n                            \n                                    Async\n                                getSeriesByBrand\n                            \n                            \n                                    Async\n                                getSeriesById\n                            \n                            \n                                    Async\n                                getSeriesCharacteristics\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seriesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/series/series.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seriesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFilteredSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredSeries(minPrice: number, maxPrice: number, brandName: string, seriesName: string, screenDiagonal: number, ram: number, builtInMemory: number, batteryCapacity: number, mainCamera: string, mainCameraFeatures: string, frontCamera: string, processorName: string, operatingSystem: string, security: string, simCards: number, countryProducer: string, quantity: number, productStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    minPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seriesName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    screenDiagonal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ram\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    builtInMemory\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batteryCapacity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mainCamera\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mainCameraFeatures\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    frontCamera\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    processorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operatingSystem\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    simCards\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    countryProducer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPriceRangeByBrand\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPriceRangeByBrand(brandName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeries()\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeriesByBrand\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesByBrand(brandName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeriesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeriesCharacteristics\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeriesCharacteristics(brandName: string, seriesName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    brandName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seriesName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSeriesDto: UpdateSeriesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/series/series.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSeriesDto\n                                    \n                                                UpdateSeriesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateSeriesDto } from './dto/update-series.dto';\nimport { Series } from './entities/series.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class SeriesService {\n  constructor(\n    @InjectRepository(Series)\n    private readonly seriesRepository: Repository,\n  ) {}\n\n  async getSeriesByBrand(brandName: string): Promise {\n    return await this.seriesRepository.find({\n      relations: ['brand'],\n      where: { brand: { brandName: brandName } },\n    });\n  }\n\n  async getSeries(): Promise {\n    return await this.seriesRepository.find();\n  }\n\n  async getSeriesById(id: number): Promise {\n    return await this.seriesRepository.findOne({ where: { id: id } });\n  }\n\n  async getPriceRangeByBrand(\n    brandName: string,\n  ): Promise {\n    const series = await this.seriesRepository\n      .createQueryBuilder('series')\n      .leftJoinAndSelect('series.brand', 'brand')\n      .where('brand.brandName = :brandName', { brandName })\n      .select('MIN(series.price)', 'minPrice')\n      .addSelect('MAX(series.price)', 'maxPrice')\n      .getRawOne();\n\n    const minPrice = series.minPrice;\n    const maxPrice = series.maxPrice;\n\n    return { minPrice, maxPrice };\n  }\n\n  async getSeriesCharacteristics(\n    brandName: string,\n    seriesName: string,\n  ): Promise {\n    return await this.seriesRepository.findOne({\n      where: { brand: { brandName }, seriesName },\n    });\n  }\n\n  async getFilteredSeries(\n    minPrice: number,\n    maxPrice: number,\n    brandName: string,\n    seriesName: string,\n    screenDiagonal: number,\n    ram: number,\n    builtInMemory: number,\n    batteryCapacity: number,\n    mainCamera: string,\n    mainCameraFeatures: string,\n    frontCamera: string,\n    processorName: string,\n    operatingSystem: string,\n    security: string,\n    simCards: number,\n    countryProducer: string,\n    quantity: number,\n    productStatus: string,\n  ): Promise {\n    const query = this.seriesRepository\n      .createQueryBuilder('series')\n      .leftJoinAndSelect('series.brand', 'brand');\n    switch (true) {\n      case !!minPrice && !!maxPrice:\n        query.andWhere('series.price BETWEEN :minPrice AND :maxPrice', {\n          minPrice,\n          maxPrice,\n        });\n        break;\n      case !!brandName:\n        query.andWhere('brand.brandName = :brandName', { brandName });\n        break;\n      case !!seriesName:\n        query.andWhere('series.seriesName = :seriesName', { seriesName });\n        break;\n      case !!screenDiagonal:\n        query.andWhere('series.screenDiagonal = :screenDiagonal', {\n          screenDiagonal,\n        });\n        break;\n      case !!ram:\n        query.andWhere('series.ram = :ram', { ram });\n        break;\n      case !!builtInMemory:\n        query.andWhere('series.builtInMemory = :builtInMemory', {\n          builtInMemory,\n        });\n        break;\n      case !!batteryCapacity:\n        query.andWhere('series.batteryCapacity = :batteryCapacity', {\n          batteryCapacity,\n        });\n        break;\n      case !!mainCamera:\n        query.andWhere('series.mainCamera = :mainCamera', { mainCamera });\n        break;\n      case !!mainCameraFeatures:\n        query.andWhere('series.mainCameraFeatures = :mainCameraFeatures', {\n          mainCameraFeatures,\n        });\n        break;\n      case !!frontCamera:\n        query.andWhere('series.frontCamera = :frontCamera', { frontCamera });\n        break;\n      case !!processorName:\n        query.andWhere('series.processorName = :processorName', {\n          processorName,\n        });\n        break;\n      case !!operatingSystem:\n        query.andWhere('series.operatingSystem = :operatingSystem', {\n          operatingSystem,\n        });\n        break;\n      case !!security:\n        query.andWhere('series.security = :security', { security });\n        break;\n      case !!simCards:\n        query.andWhere('series.simCards = :simCards', { simCards });\n        break;\n      case !!countryProducer:\n        query.andWhere('series.countryProducer = :countryProducer', {\n          countryProducer,\n        });\n        break;\n      case !!quantity:\n        query.andWhere('series.quantity = :quantity', { quantity });\n        break;\n      case !!productStatus:\n        query.andWhere('series.productStatus = :productStatus', {\n          productStatus,\n        });\n        break;\n      default:\n        break;\n    }\n\n    return query.getMany();\n  }\n\n  findAll() {\n    return `This action returns all series`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} series`;\n  }\n\n  update(id: number, updateSeriesDto: UpdateSeriesDto) {\n    return `This action updates a #${id} series`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} series`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBrandDto.html":{"url":"classes/UpdateBrandDto.html","title":"class - UpdateBrandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBrandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/dto/update-brand.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBrandDto } from './create-brand.dto';\n\nexport class UpdateBrandDto extends PartialType(CreateBrandDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSeriesDto.html":{"url":"classes/UpdateSeriesDto.html","title":"class - UpdateSeriesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSeriesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/series/dto/update-series.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSeriesDto } from './create-series.dto';\n\nexport class UpdateSeriesDto extends PartialType(CreateSeriesDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                ormconfig.ts\n            \n            variable\n            ormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/brands/brands.controller.ts\n            \n            controller\n            BrandsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/brands/dto/create-brand.dto.ts\n            \n            class\n            CreateBrandDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/brands/dto/update-brand.dto.ts\n            \n            class\n            UpdateBrandDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/entities/brand.entity.ts\n            \n            entity\n            Brands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/repository/brand-repository.ts\n            \n            class\n            BrandRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/series/dto/create-series.dto.ts\n            \n            class\n            CreateSeriesDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/series/dto/update-series.dto.ts\n            \n            class\n            UpdateSeriesDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/series/entities/series.entity.ts\n            \n            entity\n            Series\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/series/repository/series-repository.ts\n            \n            class\n            SeriesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/series/series.controller.ts\n            \n            controller\n            SeriesController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/series/series.service.ts\n            \n            injectable\n            SeriesService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^7.0.3\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mariadb : ^3.1.2\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.16\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BrandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BrandsModule\n\n\n\ncluster_BrandsModule_providers\n\n\n\ncluster_SeriesModule\n\n\n\ncluster_SeriesModule_providers\n\n\n\n\nBrandsModule\n\nBrandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBrandsModule->AppModule\n\n\n\n\n\nSeriesModule\n\nSeriesModule\n\nAppModule -->\n\nSeriesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBrandsService\n\nBrandsService\n\nBrandsModule -->\n\nBrandsService->BrandsModule\n\n\n\n\n\nSeriesService\n\nSeriesService\n\nSeriesModule -->\n\nSeriesService->SeriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ormConfig   (ormconfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mariadb',\n  host: 'localhost',\n  port: 3306,\n  username: 'root',\n  password: 'admin',\n  database: 'products',\n  synchronize: false,\n  logging: true,\n  autoLoadEntities: true,\n  migrations: ['src/migration/**/*.ts'],\n  subscribers: ['src/subscriber/**/*.ts'],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
